@mixin lazy-loaded-img() {
    bottom: 0;
    left: 0;
    margin: auto;
    position: absolute;
    right: 0;
    top: 0;
}

@mixin lazy-loaded-padding($size-param) {
    &::after {
        content: "";
        display: block;
        height: 0;
        padding-bottom: get-padding(stencilString($size-param));
        width: 100%;
    }
}

@mixin cart-item-lazy-load-img-placeholder() {
    &::after {
        content: "";
        display: block;
        height: 100%;
        left: 0;
        position: absolute;
        top: 0;
        width: 100%;
    }
}


// Custom Mixins
// -----------------------------------------------------------------------------
@mixin image-padding-bottom($imageWidth, $imageHeight) {
    position: relative;
    
    &::after {
        content: "";
        display: block;
        height: 0;
        padding-bottom: $imageHeight / $imageWidth * 100%;
        width: 100%;
    }

    > img {
        @include lazy-loaded-img;
        height: 100%;
        width: 100%;
        object-fit: cover;
    }
}

@mixin flexbox($align-items: stretch, $justify-content: flex-start, $flex-direction: row, $flex-wrap: nowrap, $display: flex) {
    align-items: $align-items;
    justify-content: $justify-content;
    flex-direction: $flex-direction;
    display: $display;
    flex-wrap: $flex-wrap;
}

@mixin flex-layout($col, $gap) {
    display: flex;
    flex-wrap: wrap;
    margin-left: -$gap;
    margin-bottom: -$gap;

    > * {
        margin-left: $gap;
        margin-bottom: $gap;
        width: calc(((100% / #{$col}) - #{$gap}));
    }
}

@mixin grid-layout($col, $gap) {
    display: grid;
    grid-template-columns: repeat($col, 1fr);
    grid-gap: $gap;
}

@mixin textClamp($rows: 1, $size: 100%) {
    display: -webkit-box;
    -webkit-line-clamp: $rows;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    width: $size;
    max-width: $size;
    white-space: pre-wrap;
    word-break: break-all;
}

@mixin hideScroll() {
    -ms-overflow-style: none;
    scrollbar-width: none;

    &::-webkit-scrollbar {
        display: none;
    }
}

@mixin maxWidth($breakpoint) {
    @media screen and (max-width: $breakpoint) {
        @content;
    }
}

@mixin minWidth($breakpoint) {
    @media screen and (min-width: $breakpoint) {
        @content;
    }
}

@mixin maxMinWidth($minBreakpoint, $maxBreakpoint) {
    @media screen and (min-width: $minBreakpoint) and (max-width: $maxBreakpoint) {
        @content;
    }
}

@mixin abs-full {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}

@mixin pos($t: null, $r: null, $b: null, $l: null, $pos: relative, $z: 1, $cb: null) {
    @if $pos == 'abs' {
        position: absolute;
    } @else if $pos == 'fixed' {
        position: fixed;
    } @else if $pos == 'sticky' {
        position: sticky;
    } @else {
        position: relative;
    }

    z-index: $z;

    @if $t != null {
        top: $t;
    }
    @if $r != null {
        right: $r;
    }
    @if $b != null {
        bottom: $b;
    }
    @if $l != null {
        left: $l;
    }

    @if $cb == 'full' {
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    @if $cb == 'center' {
        top: 50%;
        left: 50%;
        transform: translate(-50%,-50%);
    }

    @if $cb == 'center-x' {
        left: 50%;
        transform: translateX(-50%);
    }

    @if $cb == 'center-y' {
        top: 50%;
        transform: translateY(-50%);
    }
}